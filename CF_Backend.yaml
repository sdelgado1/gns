---
AWSTemplateFormatVersion: '2010-09-09'
Description: Template for creating an S3 bucket for Terraform backend
Parameters:
  BucketName:
    Type: String
    Default: gns-cloud-technical-test-terraform-state-backend
    Description: Name of the S3 bucket to create
Resources:
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref BucketName
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: ExpireOldTerraformStates
            Prefix: terraform/state/
            Status: Enabled
            ExpirationInDays: 365
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Name
          Value: !Ref BucketName
  S3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: DenyUnEncryptedObjectUploads
            Effect: Deny
            Principal: '*'
            Action: 's3:PutObject'
            Resource: !Join ['', ['arn:aws:s3:::', !Ref S3Bucket, '/*']]
            Condition:
              StringNotEquals:
                's3:x-amz-server-side-encryption': 'aws:kms'
  TerraformLockTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "gns-cloud-technical-test-terraform-state-backend"
      AttributeDefinitions:
        - AttributeName: "LockID"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "LockID"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
Outputs:
  S3BucketArn:
    Value: !GetAtt S3Bucket.Arn
            